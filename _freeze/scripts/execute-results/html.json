{
  "hash": "3c8f812d23704edfe802e833253376e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scripts\"\nfilters:\n   - lightbox\nformat: \n  html:\n    code-fold: true\n    code-summary: \"**Code - Click to view**\"\n    back-to-top-navigation: true\ndescription: \"Scripts for my charts!\"\nimage: figures/header.png\nopen-graph:\n  description: \"Scripts for my charts!\"\n  image: figures/header.png\ntwitter-card:\n  description: \"Scripts for my charts!\"\n  creator: \"@BrunoHMioto\"\n  card-style: summary_large_image\n  image: figures/header.png\n---\n\n\n\n\nThis is some of the codes I wrote to create my charts. Each chart has its own code right below it.\n\nYou can navigate through the site using the sidebar on desktop.\n\nIf some code is useful to you, please consider [donating](https://www.buymeacoffee.com/brunomioto).\n\n## Random charts\n\n### *Boa constrictor* üêç\n\n![](figures/charts/elephant.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(geomtextpath)\n\n# data --------------------------------------------------------------------\n\ndata <- data.frame(a = c(2.8,2.8,3.8,2.9,2.8,3,4.5,5.6,5.7,4.4,5.8))\n\nquote <- \"'My drawing was not a picture of a hat. It was a picture of a <i>Boa constrictor</i> digesting an elephant.'\"\n\nscatter = data.frame(\n  x = runif(10000,-5,18),\n  y = runif(10000,-1,1)\n)\n\n# plot --------------------------------------------------------------------\n\ndata %>% \n  ggplot(aes(x = a))+\n  geom_density(adjust = 1,\n               fill = \"#784707\",\n               color = \"#462e0a\",\n               size = 3)+\n  geom_textdensity(size = 5, fontface = 2, spacing = 30,\n                   vjust = -0.35, hjust = 0.2,\n                   label = quote,\n                   color = \"#462e0a\",\n                   rich = TRUE)+\n  geom_segment(x = -2.5, xend = 12, y = 0, yend = 0,\n               size = 3, color = \"#462e0a\",lineend = \"round\")+\n  geom_point(x = 11.95, y = 0.002, size = 0.5)+\n  annotate(\"text\", x = 12, y = 0, label = \"- The Little Prince by\\nAntoine de Saint-Exup√©ry\\nBruno Mioto - @BrunoHMioto\",\n           hjust = 1, vjust = 1.2, fontface = \"bold\",\n           color = \"#462e0a\")+\n  scale_y_continuous(expand = c(0,0))+\n  scale_x_continuous(limits = c(-2.5,12))+\n  theme_void()+\n  theme(\n    panel.background = element_rect(fill = \"#f7f8f8\", color = NA)\n  )+\n  coord_cartesian(ylim = c(-.4,0.8), xlim = c(-4,13))\n\n\nggsave(\"elephant.png\", width = 10, height = 6)\n```\n:::\n\n\n\n\n### Alcohol consumption üç∫\n\n![](figures/charts/drink-owid.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(elementalist)\nlibrary(janitor)\nlibrary(ggrepel)\nlibrary(rcartocolor)\nlibrary(ggforce)\n\n# data --------------------------------------------------------------------\n\ndata <- read_csv(\"data/alcohol-consumption-by-15-19-year-old-males-vs-females.csv\") %>% \n  clean_names()\n\ncountries <- read_csv(\"data/continents2.csv\") %>%\n  clean_names() %>% \n  select(alpha_3, region)\n\ndata2 <- data %>% \n  rename(male = 4,\n         female = 5) %>% \n  filter(year == 2010,\n         !is.na(male),\n         !is.na(female)) %>% \n  left_join(countries, by = c(\"code\" = \"alpha_3\"))\n\ndata_points <- tibble(\n  x = c(15,38,38),\n  y = c(5,5,28)\n)\n\n# plot --------------------------------------------------------------------\n\ndata2 %>% \n  ggplot(aes(x = female, y = male, \n             color = region))+\n  geom_abline(color = \"grey\")+\n  geom_text_repel(aes(label = ifelse(entity == \"Brazil\",\n                                     entity,\n                                     \"\")),\n                  fontface = \"bold\",\n                  max.overlaps = 40,\n                  min.segment.length = 0,box.padding = 0.6,\n                  show.legend = FALSE)+\n  geom_text_repel(aes(label = ifelse(male > 25| female>10,\n                                     entity,\n                                     \"\")),\n                  fontface = \"bold\",box.padding = 0.3,\n                  max.overlaps = 20,\n                  show.legend = FALSE)+\n  geom_point(alpha = 0.7, \n             aes(\n    size = population_historical_estimates))+\n  annotate(\"text\",\n           x = 30, y = 30, label = paste0(\"\\u2191 Men drink more\\n\\u2193 Women drink more\"),\n           angle = 33,fontface = \"bold\", color = \"grey\")+\n  ggforce::geom_mark_hull(data = data_points, aes(x = x, y = y), color = \"grey20\", fill = \"grey20\",\n                          linetype = \"dashed\",alpha = 0.1)+\n  annotate(\"text\",\n          x = 31.5, y = 11.5, label = \"A better\\nworld?\",\n          lineheight = 0.8,\n          fontface = \"bold\",\n          family = \"Open Sans\",\n          color = \"grey40\")+\n  guides(size = \"none\")+\n  #rcartocolor::scale_color_carto_d(palette = \"Bold\")+\n  scale_color_manual(\n    values = c(\"#7f3c8d\",\n               \"#11a579\",\n               \"#3969ac\",\n               \"#e68310\",\n               \"#e73f74\")\n  )+\n  scale_x_continuous(labels = scales::label_number(scale = 1,suffix = \"L\"),\n                     expand = expansion(mult = c(0,0.05)))+\n  scale_y_continuous(labels = scales::label_number(scale = 1,suffix = \"L\"),\n                     expand = expansion(mult = c(0,0.05)))+\n  labs(\n    title = \"Average alcohol consumption with 15-19 year old, 2010\",\n    subtitle = \"Measured in litres of pure alcohol per year\",\n    x = \"Avg alcohol consumption per capita (Females)\",\n    y = \"Avg alcohol consumption per capita (Males)\",\n    color = \"Continent\",\n    caption = \"Bruno Mioto @BrunoHMioto - Data: WHO, Global Health Observatory (GHO)\"\n  )+\n  theme_classic()+\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    legend.margin = margin(0,0,0,0,\"pt\"),\n    legend.text = element_text(margin = margin(0,5,0,0, unit = 'pt')),\n    legend.title = element_text(face = \"bold\"),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(face = \"bold\", angle = c(1,3,-3,-5,6)),\n    legend.position = \"top\",\n    panel.grid.major = element_line_wiggle(2.5),\n    panel.grid.minor = element_line_wiggle(2.5, color = \"#f1f1f1\"),\n    axis.line = element_line_wiggle(3),\n    text = element_text(family = \"Open Sans\")\n  )+\n  coord_cartesian(xlim = c(0,40),\n                  ylim = c(0,40))\n\n\nggsave(\"test12_5.png\", width = 6, height = 5)\n```\n:::\n\n\n\n\n### Pfizer vaccine üíâ\n\n![](figures/charts/pfizer_trial.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(extrafont)\nlibrary(readr)\n\n# data --------------------------------------------------------------------\n\ndata <- read_csv(\"https://raw.githubusercontent.com/brunomioto/dataviz/main/pfizer_vaccine/pfizer_vaccine_trial.csv\")\n\n# plot --------------------------------------------------------------------\n\ndata %>% \n  ggplot(aes(x = days_after_dose_1))+\n  #dif\n  geom_segment(aes(x = 110, xend = 110, y = 0.29413854, yend = 2.24653641),\n               color = \"#bdbdbd\",\n               size = 2)+\n  geom_label(aes(x = 110, y = 1.4, label = \"7.6x\"),\n             color = \"#bdbdbd\",\n             fill = \"#fcfcfc\",\n             size = 8,\n             label.padding = unit(10, \"pt\"),\n             label.size = NA,\n             hjust = 0.43)+\n  #placebo\n  geom_step(aes(y = placebo),\n            color = \"#f76833\",\n            size = 1)+\n  geom_point(data = data %>%  \n               distinct(placebo, .keep_all = TRUE),\n             aes(y = placebo),\n             color = \"#f76833\",\n             shape = 21,\n             fill = NA)+\n  geom_text_repel(aes(label = ifelse(days_after_dose_1 == 73, \"Placebo group\",\"\"),\n                      y = placebo),\n                  nudge_x = -5,\n                  box.padding = 0.5,\n                  nudge_y = 0.3,\n                  segment.curvature = 0.1,\n                  segment.ncp = 3,\n                  segment.angle = 20,\n                  fontface = \"bold\",\n                  color = \"#f76833\",\n                  size = 4)+\n  #vaccine\n  geom_step(aes(y = vaccine),\n            color = \"#196299\",\n            size = 1)+\n  geom_point(data = data %>%  \n               distinct(vaccine, .keep_all = TRUE),\n             aes(y = vaccine),\n             color = \"#196299\",\n             shape = 21,\n             fill = NA)+\n  geom_text_repel(aes(label = ifelse(days_after_dose_1 == 96, paste(\"Vaccinated group\\nBNT162b2 (30\\u03bcg)\"),\"\"),\n                      y = vaccine),\n                  nudge_x = -5,\n                  box.padding = 0.5,\n                  nudge_y = 0.3,\n                  segment.curvature = 0.1,\n                  segment.ncp = 3,\n                  segment.angle = 20,\n                  fontface = \"bold\",\n                  color = \"#196299\",\n                  size = 4)+\n  scale_y_continuous(breaks = seq(0,2.4,0.4), expand = expansion(mult = c(0,0.05)))+\n  scale_x_continuous(breaks = seq(0,119,7), expand = expansion(mult = c(0.01,0.02)))+\n  coord_cartesian(ylim = c(0,2.4))+\n  labs(\n    title = \"COVID-19 incidence rates in Pfizer/BioNTech's vaccine trial\",\n    x = \"Days after first dose\",\n    y = \"Cumulative incidence (%)\",\n    caption = \"Chart: Bruno Mioto @BrunoHMioto - Source: New England Journal of Medicine\"\n  )+\n  theme_minimal()+\n  theme(\n    plot.background = element_rect(fill = \"#fcfcfc\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line.x = element_line(),\n    axis.ticks.x = element_line(),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(face = \"bold\", size = 10),\n    text = element_text(family = \"Open Sans\"),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.margin = margin(10,10,10,10, unit = \"pt\")\n  )\n\nggsave(\"pfizer_trial.png\", width = 10, height = 7)\n```\n:::\n\n\n\n\n### Spider üï∑Ô∏è\n\n![](figures/charts/spider.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(ggthemes)\nlibrary(nflplotR) #we can use ggpath now\n\n# data --------------------------------------------------------------------\n\ndata <- read_csv(\"species_export_20220408.csv\")\n\n# plot --------------------------------------------------------------------\n\n#point\nplot <- data %>% \n  group_by(year) %>% \n  count() %>% \n  ungroup() %>% \n  mutate(cum_sum = cumsum(n)) %>% \n  ggplot(aes(x = year, y = cum_sum))+\n  geom_line(color = \"grey50\")+\n  geom_point(\n    aes(color = ifelse(year == 2022, \"#735133\", \"grey50\"))\n  )+\n  annotate(\n    geom = \"curve\", x = 1950, y = 45000, xend = 2022, yend = 50000, \n    curvature = -.2,\n    color = \"#735133\"\n  ) +\n  geom_richtext(x = 1950, \n                y = 40000, \n                size = 4.5,\n                color = \"#735133\",\n                label.color = NA,\n                fill = \"#f0f0f0\",\n                label = \"<i>Guriurius minuano</i><br>Marta, Bustamante, Ruiz &<br>Rodrigues, 2022\"\n  )+\n  annotate(\n    nflplotR::GeomFromPath,\n    x = 1787, y = 40000,\n    path = \"./spider_picture.png\",\n    width = 0.2\n  ) +\n  scale_color_identity()+\n  scale_y_continuous(expand = expansion(mult = c(0.02,0.02)),\n                     labels = scales::unit_format(big.mark = \",\", unit = \"\"))+\n  scale_x_continuous(breaks = c(seq(1750, 2022, 25),2022))+\n  labs(\n    title = \"The world of spiders: The 50,000th species described!\",\n    x = \"Year\",\n    y = \"Number of species\",\n    caption = \"Data: World Spider Catalog\\nFigure:  Marta, Bustamante, Ruiz & Rodrigues (2022)\"\n  )+\n  theme_fivethirtyeight() +\n  theme(\n    panel.grid.minor.y = element_blank(),\n    axis.title = element_text(face = \"bold\"),\n    plot.title.position = \"plot\",\n    axis.title.x = element_text(margin = margin(5,0,-5,0)),\n    plot.caption = element_text(margin = margin(0,0,0,0))\n  )+\n  coord_cartesian(ylim = c(0,NA))\n```\n:::\n\n\n\n\n### Star Wars üåå\n\n![](figures/charts/starwars.png){.lightbox group=\"my-gallery2\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(ggfx)\n\n# data --------------------------------------------------------------------\n\ndata <- dplyr::starwars\n\nlist_char <- c(\"Luke Skywalker\",\n               \"Darth Vader\",\n               \"Obi-Wan Kenobi\",\n               \"Yoda\",\n               \"Mace Windu\",\n               \"Leia Organa\")\n\ndata2 <- data %>%\n  mutate(height = height/100)\n\n# plot --------------------------------------------------------------------\n\nplot <- data2 %>% \n  ggplot(aes(x = height, y = height))+\n    #Yoda\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Yoda\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#02fe2c\",\n      sigma = 20,\n      expand = 10\n    )+ \n    #Leia\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Leia Organa\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#006be4\",\n      sigma = 20,\n      expand = 10\n    )+ \n    #luke\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Luke Skywalker\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#02fe2c\",\n      sigma = 20,\n      expand = 10\n    )+\n    #Obi-Wan Kenobi\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Obi-Wan Kenobi\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#006be4\",\n      sigma = 20,\n      expand = 10\n    )+ \n    #Mace Windu\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Mace Windu\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#d413ef\",\n      sigma = 20\n    )+\n    #darth vader\n    with_outer_glow(\n      geom_segment(data=filter(data2,name == \"Darth Vader\"),\n                   aes(x = 0, xend = height, yend = name, y = name),\n                   color = \"#ffffff\",\n                   size = 3,\n                   lineend = \"round\"),\n      colour = \"#e00301\",\n      sigma = 30,\n      expand = 10\n    )+\n    labs(\n      title = \"Height of some Star Wars characters\",\n      x = \"Height, m\",\n      caption = \"Bruno Mioto - @BrunoHMioto\"\n    )+\n    scale_x_continuous(expand = expansion(mult = c(0,0.05)))+\n    scale_y_discrete(limits = c(\"Yoda\",\n                                \"Leia Organa\",\n                                \"Luke Skywalker\",\n                                \"Obi-Wan Kenobi\",\n                                \"Mace Windu\",\n                                \"Darth Vader\"))+\n    theme_minimal()+\n    theme(\n      plot.background = element_rect(fill = \"black\"),\n      panel.background = element_rect(fill = \"black\"),\n      panel.grid.major.y = element_line(linetype = \"dashed\", color = \"grey\"),\n      panel.grid.minor.y = element_blank(),\n      panel.grid.major.x = element_blank(),\n      plot.title.position = \"plot\",\n      plot.title = element_text(size = rel(1.5)),\n      text = element_text(color = \"white\", face = \"bold\"),\n      axis.text = element_text(color = \"white\"),\n      axis.title.x = element_blank(),\n      axis.text.x = element_text(angle = 90,vjust = 0.5, hjust = 1)\n    )+\n  coord_flip()\n\n\nggsave(plot = plot, \"starwars_height_flip.png\", height = 10, width = 5)\n```\n:::\n\n\n\n\n### Copacabana üèñÔ∏è\n\n![](figures/charts/copacabana.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggforce)\nlibrary(patchwork)\n\n# data --------------------------------------------------------------------\n\ncol_1 <- c(\"a\", \"b\", \"c\", \"d\")\ncol_2 <- c(\"e\", \"f\", \"g\", \"h\")\ncol_3 <- c(\"i\", \"j\", \"k\", \"l\")\nvalue <- c(0, 5, 5, 5)\n\ndf <- data.frame(col_1, col_2, col_3, value)\n\ndf <- gather_set_data(df, 1:3)\n\ndf$y <- factor(df$y, levels = c(\"a\", \"b\", \"c\", \"d\",\n                                \"f\", \"g\", \"h\", \"e\",\n                                \"i\", \"j\", \"k\", \"l\"\n                                ))\n\n# plot -------------------------------------------------\n\na <- df %>%\n  ggplot(aes(x, id = id, split = y, value = value)) +\n  geom_parallel_sets(\n    fill = \"black\",\n    axis.width = 0,\n    sep = 0.5,\n    strength = 0.7\n  ) +\n  geom_parallel_sets_axes(axis.width = 0) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_x_discrete(expand = c(0, 0)) +\n  theme_void()\n\n# copacabana ------------------------------------------\n\n(a|a|a|a|a)/(a|a|a|a|a)\n\nggsave(\"copacabana3.png\", width = 6, height = 6)\n```\n:::\n\n\n\n\n### Eye üëÅÔ∏è\n\n![](figures/charts/eye.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggforce)\nlibrary(ggnewscale)\n\n# data --------------------------------------------------------------------\n\ndata <- data.frame(x = runif(1000),\n                   y = runif(1000))\n\ncircle <- data.frame(\n  x0 = 0.1,\n  y0 = 0.9,\n  r = 0.06\n)\n\n# plot --------------------------------------------------------------------\n\neye <- ggplot(data)+\n  #fundo\n  geom_tile(aes(x = 0.5, y=1, fill = y)) +\n  scale_fill_gradient2(low = '#ffffff', mid = \"#f3f1f4\", high = '#e8e4e9',\n                       midpoint = 0.6) +\n  ggnewscale::new_scale_fill()+\n  #iris fundo\n  geom_tile(aes(x = 0.5, y=0.5, fill = y)) +\n  scale_fill_gradient2(low = '#2b5a74', mid = '#08303c', high = '#08303c',\n                       midpoint = 0.8) +\n  #iris linha\n  geom_line(aes(x,y,color = y))+\n  scale_color_gradient(low = \"#412808\", high = \"#ad8d6d30\")+\n  #contorno\n  geom_hline(yintercept = 1.5, size = 1.2)+\n  ggnewscale::new_scale_fill()+\n  #pupila\n  geom_rect(xmin = 0, xmax = 1, ymin = 0, ymax = 0.4,\n            fill = \"#000000\")+\n  #reflexo\n  geom_circle(data = circle, aes(x0 = x0, y0 = y0, r = r, fill = r),\n              fill = \"#ffffff\")+\n  scale_y_continuous(limits = c(0,1.5))+\n  coord_polar()+\n  theme_void()+\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"white\", color = NA)\n  )\n\n# save --------------------------------------------------------------------\n\nggsave(plot = eye, \"eye.png\", width = 6, height = 6)\n```\n:::\n\n\n\n\n### US Nuclear Tests üí£Ô∏è\n\n![](figures/charts/us_nuclear_tests.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggfx)\nlibrary(ggpath)\n\n# data --------------------------------------------------------------------\n\nnuclear_tests <- read.csv(\"https://raw.githubusercontent.com/owid/notebooks/main/BastianHerre/nuclear_weapons/Arms%20Control%20Association%20(2020)%20nuclear%20weapons%20tests/nuclear_weapons_tests_states.csv\")\n\nusa_tests <- nuclear_tests %>% \n  filter(country_name == \"United States\") %>% \n  group_by(year) %>% \n  count(wt = nuclear_weapons_tests)\n\n# plot --------------------------------------------------------------------\n\nusa_tests %>% \n  ggplot(aes(x = year, y = n))+\n  #1st bomb\n  annotate(\n    \"curve\",\n    x = 1944.5, xend = 1944,\n    y = 2, yend = 28,\n    color = \"white\",\n    curvature = -0.3\n  )+\n  annotate(\n    \"text\",\n    x = 1948,\n    y = 32,\n    label = \"'Trinity' was the first\\nUS bomb to be tested\",\n    family = \"Open Sans\",\n    lineheight = 0.85,\n    color = \"white\"\n  )+\n  #moratorium \n  annotate(\n    \"rect\",\n    xmin = 1958.5, xmax = 1960.5,\n    ymin = -Inf, ymax = 102,\n    fill = \"#cbcbc2\",\n    alpha = 0.3\n  )+\n  annotate(\n    \"label\",\n    x = 1951,\n    y = 87.5,\n    label = \"URSS, UK, and the US\\nagreed to a moratorium\\non nuclear weapon tests in 1958\",\n    size = 3,\n    family = \"Open Sans\",\n    lineheight = 0.87,\n    color = \"white\",\n    fill = \"#171515\",\n    label.size = NA,\n  )+\n  annotate(\n    \"curve\",\n    x = 1955, xend = 1958.3,\n    y = 92, yend = 95,\n    color = \"white\",\n    curvature = -0.2,\n    linewidth = 0.3\n  )+\n  #record\n  annotate(\n    \"label\",\n    x = 1975,\n    y = 93,\n    label = \"After the moratorium was broken in August 1961,\\nthe US tested 96 nuclear bombs in 1962\",\n    size = 3.5,\n    family = \"Open Sans\",\n    lineheight = 0.87,\n    color = \"white\",\n    fill = \"#171515\",\n    label.size = NA,\n  )+\n  #last test\n  annotate(\n    \"label\",\n    x = 1988,\n    y = 31.25,\n    label = \"Following intense public pressure,\\nthe US adheres to a testing\\nmoratorium in 1992\",\n    size = 3,\n    family = \"Open Sans\",\n    lineheight = 0.87,\n    color = \"white\",\n    fill = \"#171515\",\n    label.size = NA,\n  )+\n  annotate(\n    \"curve\",\n    x = 1992, xend = 1993,\n    y = 7, yend = 28,\n    color = \"white\",\n    curvature = 0.2,\n    linewidth = 0.3\n  )+\n  #tests label\n  annotate(\n    \"label\",\n    x = 1942,\n    y = 100,\n    label = \"tests\",\n    hjust = 0,\n    vjust = 0.45,\n    label.size = NA,\n    fill = \"#171515\",\n    color = \"white\",\n    family = \"Open Sans\",\n    fontface = \"bold\"\n  )+\n  geom_from_path(\n    path = \"https://upload.wikimedia.org/wikipedia/commons/a/ae/Nuclear_symbol.svg\",\n    x = 1994,\n    y = 107,\n    width = 0.07,\n    stat = \"unique\"\n  )+\n  with_outer_glow(\n    geom_col(fill = \"#fefb8c\"),\n    colour = \"#cb3200\",\n    sigma = 60\n  )+\n  scale_y_continuous(\n    expand = expansion(mult = c(0,0.05)),\n  )+\n  labs(\n    title = \"Number of nuclear weapons tests by the United States\",\n    caption = \"Bruno Mioto @BrunoHMioto - data: Arms Control Association (2020)\"\n  )+\n  theme_grey(base_family = \"Open Sans\")+\n  theme(\n    plot.margin = margin(10,10,10,10,\"pt\"),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\", \n                              size = 16,\n                              color = \"white\"),\n    plot.caption = element_text(color = \"white\"),\n    plot.background = element_rect(fill = \"#171515\", color = NA),\n    panel.background = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"#cbcbc2\"),\n    panel.grid.minor.y = element_line(color = \"#cbcbc2\",\n                                      linetype = \"dashed\"),\n    axis.ticks = element_blank(),\n    axis.text = element_text(color = \"white\",\n                             face = \"bold\"),\n    axis.text.y = element_text(size = 10),\n    axis.title = element_blank()\n  )+\n  coord_cartesian(xlim = c(1945, 1993),\n                  ylim = c(0,100),\n                  clip = \"off\")\n\n# save --------------------------------------------------------------------\n\nggsave(\"figures/us_nuclear_tests.png\", width = 8, height = 6, dpi = 600)\n```\n:::\n\n\n\n\n## NFL Charts üèà\n\n### Black Quarterbacks ‚úä\n\n![](figures/charts/black_qbs.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(ggtext)\n\n# data --------------------------------------------------------------------\n\ndata <- tibble(\n  name = c(\n    \"Doug Williams\", \"Steve McNair\", \"Donovan McNabb\",\n    \"Colin Kaepernick\", \"Russell Wilson\", \"Russell Wilson\",\n    \"Cam Newton\", \"Patrick Mahomes\", \"Patrick Mahomes\",\n    \"Patrick Mahomes\", \"Patrick Mahomes\",\"Jalen Hurts\",\n    \"Patrick Mahomes\", \"Jalen Hurts\"\n  ),\n  superbowl = c(\n    22, 34, 39,\n    47, 48, 49,\n    50, 54, 55,\n    57, 58, 57,\n    59, 59\n  ),\n  team = c(\n    \"Washington Redskins\", \"Tennessee Titans\", \"Philadelphia Eagles\",\n    \"San Francisco 49ers\", \"Seattle Seahawks\", \"Seattle Seahawks\",\n    \"Carolina Panthers\", \"Kansas City Chiefs\", \"Kansas City Chiefs\",\n    \"Kansas City Chiefs\", \"Kansas City Chiefs\",\"Philadelphia Eagles\",\n    \"Kansas City Chiefs\", \"Philadelphia Eagles\"\n  ),\n  conference = c(\n    \"NFC\",\"AFC\",\"NFC\",\n    \"NFC\",\"NFC\",\"NFC\",\n    \"NFC\",\"AFC\",\"AFC\",\n    \"AFC\",\"AFC\",\"NFC\",\n    \"AFC\",\"NFC\"\n  ),\n  black = c(\n    TRUE, TRUE, TRUE,\n    TRUE, TRUE, TRUE,\n    TRUE, TRUE, TRUE,\n    TRUE, TRUE, TRUE,\n    TRUE, TRUE\n    ),\n  win = c(\n    TRUE, FALSE, FALSE,\n    FALSE, TRUE, FALSE,\n    FALSE, TRUE, FALSE,\n    TRUE, TRUE, FALSE,\n    FALSE, FALSE\n    )\n)\n\n\ndata2 <- tibble(\n  superbowl = rep(1:58, 2),\n  name = NA,\n  team = NA,\n  conference = NA,\n  black = FALSE,\n  win = NA\n) |>\n  bind_rows(data) |>\n  arrange(superbowl, name) |>\n  group_by(superbowl) |>\n  slice_head(n = 2) |>\n  mutate(\n    conference = case_when(\n      !is.na(conference) ~ conference,\n      any(conference == \"NFC\", na.rm = TRUE) ~ \"AFC\",\n      any(conference == \"AFC\", na.rm = TRUE) ~ \"NFC\",\n      TRUE ~ ifelse(row_number() == 1, \"AFC\", \"NFC\")\n    )\n  )\n\n\n\n# plot --------------------------------------------------------------------\n\ndata2 |>\n  ggplot(aes(x = superbowl, y = conference))+\n  #1st black qb\n  annotate(\n    \"segment\",\n    x = 22,\n    xend = 22,\n    y = 2,\n    yend = 2.15,\n    color = \"black\"\n  )+\n  geom_richtext(\n    x = 22,\n    y = 2.4,\n    label = \"<b>Doug Williams</b> was the 1<sup>st</sup><br>Black QB to start a SB\",\n    lineheight = 0.8,\n    fill = NA, label.color = NA,\n    inherit.aes = FALSE,\n    stat = \"unique\"\n  )+\n  #2nd qb to win\n  annotate(\n    \"curve\",\n    x = 48,\n    y = 2,\n    xend = 46,\n    yend = 2.4,\n    curvature = 0.45\n  )+\n  geom_richtext(\n    x = 41,\n    y = 2.4,\n    label = \"<b>R. Wilson</b> was the 2<sup>nd</sup><br>Black QB to win a SB\",\n    lineheight = 0.8,\n    fill = NA, label.color = NA,\n    inherit.aes = FALSE,\n    stat = \"unique\"\n  )+\n  #3rd black qb to win\n  annotate(\n    \"curve\",\n    x = 54,\n    y = 1,\n    xend = 52,\n    yend = 0.6,\n    curvature = -0.45\n  )+\n  geom_richtext(\n    x = 45.5,\n    y = 0.6,\n    label = \"<b>P. Mahomes</b> was only the 3<sup>rd</sup><br>Black QB to win a Super Bowl\",\n    lineheight = 0.8,\n    fill = NA, label.color = NA,\n    inherit.aes = FALSE,\n    stat = \"unique\"\n  )+\n  #1st and 2nd both black qbs\n  annotate(\n    \"rect\",\n    xmin = 56.5,\n    xmax = 57.5,\n    ymin = 0.85,\n    ymax = 2.15,\n    alpha = 0.3\n  )+\n  annotate(\n    \"text\",\n    x = 58,\n    y = 2.4,\n    label = \"Only Super Bowls with\\nboth Black starting QBs\",\n    lineheight = 0.8\n  )+\n  #2nd both black qbs\n  annotate(\n    \"rect\",\n    xmin = 58.5,\n    xmax = 59.5,\n    ymin = 0.85,\n    ymax = 2.15,\n    alpha = 0.3\n  )+\n  #SB 59\n  annotate(\n    \"segment\",\n    x = 59,\n    y = c(1,2),\n    xend = 59.8,\n    yend = c(1,2)\n  )+\n  annotate(\n    \"text\",\n    x = 60,\n    y = c(1,2),\n    hjust = 0,\n    label = c(\"P. Mahomes\",\"J. Hurts\"),\n    lineheight = 0.8,\n    fontface = \"bold\"\n  )+\n  #plot\n  geom_point(\n    aes(fill = black,\n        color = win),\n    shape = 21,\n    size = 4,\n    stroke = 0.7\n  )+\n  annotate(\n    \"text\",\n    x = 0,\n    y = c(1,2,1.5),\n    label = c(\"AFC\",\"NFC\",\"Super Bowl\"),\n    fontface = \"bold\",\n    hjust = 1\n  )+\n  annotate(\n    \"text\",\n    x = c(1,seq(5,55,5),59),\n    y = 1.5,\n    label = c(1,seq(5,55,5),59),\n    fontface = \"bold\"\n  )+\n  annotate(\n    \"text\",\n    x = c(1,seq(5,55,5),59),\n    y = 1.25,\n    label = \"|\",\n  )+\n  annotate(\n    \"text\",\n    x = c(1,seq(5,55,5),59),\n    y = 1.75,\n    label = \"|\",\n  )+\n  scale_fill_manual(\n    values = c(\n      \"TRUE\" = \"#0A90C5\",\n      \"FALSE\" = \"#FC670D\"\n    )\n  )+\n  scale_color_manual(\n    values = c(\n      \"TRUE\" = \"black\",\n      \"FALSE\" = \"transparent\"\n    ),na.value = \"transparent\"\n  )+\n  scale_y_discrete()+\n  labs(\n    title = \"Breaking Barriers: A New Era for Black Quarterbacks in the Super Bowl\",\n    subtitle = \"Representation matters, just let them play\",\n    caption = \"Data: Wikipedia - Made by Bruno Mioto - www.brunomioto.com\"\n  )+\n  theme_void()+\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"#f1f1f1\",color = NA),\n    plot.caption = element_text(hjust = 0),\n    plot.margin = margin(5,5,10,10,\"pt\"),\n    plot.title = element_text(face = \"bold\")\n  )+\n  coord_cartesian(\n    xlim = c(-2.5,63)\n  )\n\nggsave(\"figures/plot_black_qbs.png\", width = 12, height = 2.7, dpi = 1200)\n```\n:::\n\n\n\n\n\n### Time to throw ‚è±Ô∏è\n\n![](figures/charts/ttt-nfl.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(nflreadr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(nflplotR)\nlibrary(ggh4x)\nlibrary(ggbeeswarm)\n\n# data --------------------------------------------------------------------\n\ntt <- nflreadr::load_nextgen_stats(stat_type = \"passing\",seasons = 2022) %>%\n  mutate(team_abbr = ifelse(team_abbr == \"LAR\", \"LA\", team_abbr))\n\n\ntt_qbs <- tt %>%\n  filter(week == 0) %>%\n  group_by(team_abbr) %>%\n  arrange(desc(attempts)) %>%\n  slice_head() %>%\n  select(player_display_name, team_abbr, player_gsis_id) %>%\n  ungroup()\n\ntt_top <- tt %>%\n  filter(player_gsis_id %in% tt_qbs$player_gsis_id,\n         (player_display_name != \"Baker Mayfield\" | team_abbr != \"CAR\")\n         )\n\ntt_avg <- tt %>%\n  summarise(avg = mean(avg_time_to_throw))\n\ntt_all <- nflreadr::load_nextgen_stats(stat_type = \"passing\", seasons = 2016:2022) %>%\n  mutate(team_abbr = ifelse(team_abbr == \"LAR\", \"LA\", team_abbr))\n\ntt_all2 <- tt_all %>%\n  filter(player_gsis_id %in% tt_top$player_gsis_id,\n         week != 0) %>%\n  group_by(player_gsis_id) %>%\n  arrange(desc(season)) %>%\n  mutate(team_abbr = ifelse(season == 2022, team_abbr, NA)) %>%\n  tidyr::fill(team_abbr) %>%\n  filter(season != 2022) %>%\n  ungroup() %>%\n  add_row(team_abbr = \"PIT\")\n\n\ntt_top$team_abbr2 <- nfl_team_factor(tt_top$team_abbr)\ntt_all2$team_abbr2 <- nfl_team_factor(tt_all2$team_abbr)\n\n\nlabel_names <- c(\n  \"MIA\" = \"Tua Tagovailoa\",\n  \"LV\" = \"Derek Carr\",\n  \"NYJ\" = \"Zach Wilson\",\n  \"NYG\" = \"Daniel Jones\",\n  \"BUF\" = \"Josh Allen\",\n  \"DAL\" = \"Dak Prescott\",\n  \"SF\" = \"Jimmy Garoppolo\",\n  \"PIT\" = \"Kenny Pickett\",\n  \"TEN\" = \"Ryan Tannehill\",\n  \"PHI\" = \"Jalen Hurts\",\n  \"ARI\" = \"Kyler Murray\",\n  \"CAR\" = 'Sam Darnold',\n  \"HOU\" = \"Davis Mills\",\n  \"NE\" = \"Mac Jones\",\n  \"LAC\" = \"Justin Herbert\",\n  \"BAL\" = \"Lamar Jackson\",\n  \"IND\" = \"Matt Ryan\",\n  \"MIN\" = \"Kirk Cousins\",\n  \"JAX\" = \"Trevor Lawrence\",\n  \"SEA\" = \"Geno Smith\",\n  \"WAS\" = \"Carson Wentz\",\n  \"LA\" = \"Baker Mayfield\",\n  \"KC\" = \"Patrick Mahomes\",\n  \"GB\" = \"Aaron Rodgers\",\n  \"TB\" = \"Tom Brady\",\n  \"CLE\" = \"Jacoby Brissett\",\n  \"NO\" = \"Andy Dalton\",\n  \"ATL\" = \"Marcus Mariota\",\n  \"CHI\" = \"Justin Fields\",\n  \"DEN\" = \"Russell Wilson\",\n  \"DET\" = \"Jared Goff\",\n  \"CIN\" = \"Joe Burrow\"\n\n)\n\n# plot --------------------------------------------------------------------\n\ng <- tt_top %>%\n  ggplot(aes(x = avg_time_to_throw, y = player_display_name))+\n  nflplotR::geom_nfl_logos(aes(team_abbr = team_abbr2), width = 0.4,\n                           stat = \"unique\",\n                           alpha = 0.2,\n                           x = 3.7, y = 1)+\n  geom_beeswarm(data = tt_all2 %>% filter(week != 0),\n                size = 2.8,\n                alpha = 0.2,\n                shape = 16,\n                cex= 4,\n                priority='random',\n                color = \"grey50\")+\n  geom_vline(data = tt_avg,\n             aes(xintercept = avg),\n             color = \"#0570b0\",\n             linetype = \"dashed\")+\n  geom_vline(data = . %>% filter(week == 0),\n             aes(xintercept = avg_time_to_throw))+\n  geom_beeswarm(data = . %>% filter(week != 0),\n                size = 2.5,\n                cex=4,\n                priority='random',\n                shape = 21,\n                aes(color = team_abbr2,\n                    fill = team_abbr2))+\n  geom_text(data = . %>% filter(week == 0),\n            x = 1.9, y = 1.4,\n            hjust = 0,\n            family = \"Open Sans\",\n            aes(label = paste0(scales::number(avg_time_to_throw,accuracy = 0.01),\" s\")))+\n  scale_color_nfl(type = \"secondary\")+\n  scale_fill_nfl(type = \"primary\")+\n  facet_wrap2(team_abbr2~.,\n              labeller = as_labeller(label_names),\n              scales = \"free_y\",\n              axes = \"x\",\n              remove_labels = \"x\",\n              ncol = 4)+\n  labs(\n    title = \"Average time to throw for each QB - 2022 Regular season\",\n    subtitle = glue::glue(\"Current season highlighted - QB with most attempts per team. NFL 2022 season average ({round(tt_avg$avg,2)} sec) in blue.\"),\n    caption = \"Bruno Mioto @BrunoHMioto - Data: Next Gen Stats with nflreadr\"\n  )+\n  theme_classic()+\n  theme(\n    text = element_text(family = \"Open Sans\"),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\", size = 18),\n    plot.subtitle = element_text(face = \"bold\"),\n    axis.text.x = element_text(face = \"bold\"),\n    axis.text.y = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"black\", size = 0.8),\n    axis.line.y = element_blank(),\n    axis.line.x = element_line(size = 0.8),\n    panel.grid.major.x = element_line(),\n    plot.background = element_rect(fill = \"#f0f0f0\"),\n    strip.background = element_blank(),\n    strip.text = element_text(face = \"bold\", size = 10)\n  )\n\n\nggsave(plot = g, \"ttt_2022_season_logo.png\", width = 9, height = 9)\n```\n:::\n\n\n\n\n### Players by draft round üéüÔ∏è\n\n![](figures/charts/rnd-players-nfl.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(nflplotR)\nlibrary(nflfastR)\nlibrary(ggchicklet)\nlibrary(ggh4x)\n\n# data --------------------------------------------------------------------\n\nurl <- \"https://raw.githubusercontent.com/ajreinhard/NFL-public/main/misc-data/2013_to_2022_init53.csv\"\n\nrosters <- read_csv(url)\n\nroster_2022 <- rosters %>% \n  filter(season == 2022) %>% \n  mutate(draft_rnd = ifelse(draft_type == \"Undrafted\",\"UFA\",draft_rnd))\n\nround_players <- roster_2022 %>% \n  count(team, draft_rnd) %>% \n  left_join(nflfastR::teams_colors_logos,\n          by = c(\"team\" = \"team_abbr\"))\n\n\nround_players$team <- nfl_team_factor(round_players$team)\n\nround_players$team_division <- factor(round_players$team_division,\n                                      levels = c(\"AFC West\",\"AFC North\",\"AFC South\",\"AFC East\",\n                                                 \"NFC West\",\"NFC North\",\"NFC South\",\"NFC East\"))\n\nround_players$draft_rnd <- factor(round_players$draft_rnd,\n       levels = c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"UFA\"))\n\n# plot --------------------------------------------------------------------\n\nround_players %>% \n  ggplot(aes(x = team, y = n, fill = draft_rnd))+\n  geom_chicklet()+\n  geom_text(position = position_stack(vjust = 0.5,reverse = TRUE),\n            aes(label = ifelse(n > 2, n, \"\")),\n            color = \"white\")+\n  facet_wrap2(~team_division, ncol = 4, scales = \"free_y\", axes = \"all\")+\n  scale_y_continuous(breaks = seq(0,50,10),\n                     expand = c(0,0))+\n  scale_fill_manual(\n    values = c('#dc3913',\n               '#3366cc',\n               '#0f9618',\n               '#992299',\n               '#0099c6',\n               '#dd4477',\n               '#e67300',\n               '#737373')\n  )+\n  labs(\n    title = \"Number of players of each team by draft round in the 2022 season\",\n    fill = \"Draft round\",\n    caption = \"Bruno Mioto @BrunoHMioto - Data: TheFootballDB by @reinhurdler\"\n  )+\n  guides(fill = guide_legend(nrow = 1,\n                             label.position = \"bottom\"))+\n  theme_minimal()+\n  theme(\n    plot.title = element_text(size = rel(1.5), face = \"bold\"),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill = \"white\", color = NA),\n    plot.margin = margin(15,15,15,15,unit = \"pt\"),\n    legend.title = element_text(face = \"bold\"),\n    axis.text.y = element_nfl_logo(size = 0.7),\n    axis.title = element_blank(),\n    legend.position = \"top\",\n    legend.spacing.x = unit(0.1, 'cm'),\n    legend.spacing.y = unit(0, 'cm'),\n    legend.key.height =  unit(1, \"cm\"),\n    legend.box.margin = margin(-5,0,-10,0,unit = \"pt\"),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.x = element_line(color = \"#999999\"),\n    strip.text = element_text(size = rel(1.2),\n                              face = \"bold\"),\n    text = element_text(family = \"Open Sans\")\n  )+\n  coord_flip()\n\nggsave(\"rnd_players_2022.png\", width = 10, height = 6)\n```\n:::\n\n\n\n\n### Early-Late downs QBs slope üöÄ\n\n![](figures/charts/slope-nfl.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(nflreadr)\nlibrary(nflplotR)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(tidyr)\nlibrary(ggtext)\n\n# data --------------------------------------------------------------------\n\npbp <- load_pbp(seasons = 2022)\nrosters <- load_rosters(2022)\n\nsnap_counts <- nflreadr::load_snap_counts()\n\nsnap_counts_topQB <- snap_counts %>%\n  filter(position == \"QB\") %>%\n  group_by(team, player, pfr_player_id) %>%\n  summarise(total_off_snaps = sum(offense_snaps)) %>%\n  filter(!pfr_player_id %in% c(\"RushCo00\")) %>%\n  group_by(team) %>%\n  arrange(desc(total_off_snaps)) %>%\n  slice_head()\n\nqb_active <- rosters %>%\n  filter((pfr_id %in% c(snap_counts_topQB$pfr_player_id))|\n           gsis_id == \"00-0038102\" #Kenny Pickett\n  )\n\nQB_EPA <- pbp %>%\n  filter(!is.na(qb_epa),\n         passer_id %in% qb_active$gsis_id,\n         qb_dropback == 1,\n         down <= 4\n  ) %>%\n  mutate(down_type = ifelse(down %in% c(1,2), \"early\", \"late\")) %>%\n  group_by(name, passer_id, posteam, season, down_type) %>%\n  summarize(tot_epa = sum(qb_epa),\n            mean_epa = mean(qb_epa),\n            n = n()) %>%\n  ungroup() %>%\n  left_join(rosters, by = c(\"passer_id\" = \"gsis_id\"))\n\nQB_EPA_better <- QB_EPA %>%\n  select(-c(tot_epa,n)) %>%\n  pivot_wider(\n    names_from = down_type,\n    values_from = mean_epa\n  ) %>%\n  pull(name)\n\n# plot --------------------------------------------------------------------\n\nQB_EPA %>%\n  ggplot(aes(x = down_type, y = mean_epa, color = posteam, group = posteam))+\n  annotate(\n    \"segment\",\n    x = -Inf, xend = 2,\n    y = seq(-0.4,0.8,0.2), yend = seq(-0.4,0.8,0.2),\n    color = \"#d1d1d1\",\n    linetype = \"dashed\",\n    linewidth = 0.4)+\n  geom_vline(xintercept = c(1,2))+\n  geom_line(data = . %>% filter(!name %in% QB_EPA_better),\n            color = \"grey\")+\n  geom_point(data = . %>% filter(!name %in% QB_EPA_better),\n             color = \"grey\",\n             shape = 21,\n             fill = \"white\")+\n  geom_text_repel(data = . %>% filter(down_type == \"late\",\n                                      name %in% QB_EPA_better),\n                  aes(x = 2,\n                      label = last_name),\n                  nudge_x = 0.05,\n                  hjust = 0,\n                  direction = \"y\",\n                  min.segment.length = unit(8,\"pt\"),\n                  fontface = \"bold\",\n                  family = \"Open Sans\"\n  )+\n  geom_line(data = . %>% filter(name %in% QB_EPA_better),\n            linewidth = 1)+\n  geom_point(data = . %>% filter(name %in% QB_EPA_better),\n             shape = 21,\n             size = 2,\n             fill = \"white\")+\n  annotate(\n    \"text\",\n    x = 1.5, y =0.46, angle = 35,\n    label = \"Better on late downs\"\n  )+\n  annotate(\n    \"text\",\n    x = 1.5, y = -0.31, angle = -32,\n    label = \"Worse on late downs\",\n    color = \"grey\"\n  )+\n  scale_x_discrete(\n    expand = expansion(mult = c(0.2,0.4)),\n    labels = c(\n      \"Early Downs\\n(1st/2nd)\",\n      \"Late Downs\\n(3rd/4th)\"\n    )\n  )+\n  scale_y_continuous(\n    breaks = seq(-1,1,0.2)\n  )+\n  scale_color_nfl()+\n  labs(\n    title = \"<span style='color:#E31837'>Mahomes</span> and <span style='color:#008E97'>Tua</span> are another level for late downs\",\n    y = \"EPA/dropback\",\n    caption = \"Bruno Mioto @BrunoHMioto - data: @nflverse\"\n  )+\n  theme_minimal()+\n  theme(\n    text = element_text(family = \"Open Sans\"),\n    plot.title = element_markdown(size = 13, face = \"bold\"),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill = \"#f1f1f1\", color = NA),\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(face = \"bold\"),\n    panel.grid = element_blank()\n  )\n\nggsave(\"slope_early_late_downs.png\", width = 5, height = 6)\n```\n:::\n\n\n\n\n\n### Mahomes Scale üìê\n\n![](figures/charts/mahomes_scale.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(nflreadr)\nlibrary(nflplotR)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(tidyr)\nlibrary(elementalist)\nlibrary(stringr)\nlibrary(scales)\n\n# data --------------------------------------------------------------------\n\npbp <- nflreadr::load_pbp(seasons = c(2018:2022))\n\nQB_data <- pbp %>%\n  dplyr::filter(\n    !is.na(qb_epa),\n    qb_dropback == 1,\n    down <= 4\n    ) %>%\n  dplyr::mutate(down_var = ifelse(down <= 2, \n                                  \"early\", \n                                  \"late\")\n                ) %>% \n  dplyr::group_by(name, \n                  passer_id, \n                  posteam, \n                  down_var\n                  ) %>% \n  dplyr::summarize(\n    mean_epa = mean(qb_epa),\n    n = n()\n    ) %>% \n  dplyr::filter(n >= 100) %>% \n  tidyr::pivot_wider(\n    names_from = down_var,\n    values_from = c(mean_epa,n)\n    ) %>% \n  dplyr::filter(\n    !is.na(mean_epa_early),\n    !is.na(mean_epa_late)\n    ) %>% \n  dplyr::mutate(\n    n_combined = n_early+n_late,\n    name = stringr::str_extract(name, \"(?<=\\\\.).*\")\n    )\n\n# plot --------------------------------------------------------------------\n\n# to ggrepel with bubble size work\nmy_pal <- function(range = c(1,6)) {\n  force(range)\n  function(x) scales::rescale(x, to = range, from = c(0, 1))\n}\n\nQB_data %>% \n  ggplot(aes(x = mean_epa_early, y = mean_epa_late))+\n  geom_hline(yintercept = 0, linetype = \"dashed\",\n             color = \"grey30\")+\n  geom_vline(xintercept = 0, linetype = \"dashed\",\n             color = \"grey30\")+\n  geom_path(aes(x = c(0:0.1), y = c(0:0.2)),\n            color = \"blue\")+\n  geom_point(aes(fill = posteam, color = posteam, \n                 size = n_combined),\n             shape = 21)+\n  continuous_scale(\n    aesthetics = c(\"size\", \"point.size\"), scale_name = \"size\",\n    palette = my_pal(c(2,6)),\n    guide = guide_legend(override.aes = list(label = \"\")) # hide \"a\" in legend\n  ) +\n  geom_text_repel(aes(label = name,\n                      point.size = n_combined,\n                      fontface = ifelse(name == \"Mahomes\", \"bold\", \"plain\")),max.time = 5,\n                  max.overlaps = 7)+\n  scale_x_continuous(breaks = seq(-0.5,0.5,0.1),\n                     limits = c(-0.02,NA))+\n  scale_y_continuous(breaks = seq(-0.5,0.5,0.1),\n                     limits = c(-0.21,NA))+\n  scale_fill_nfl(\"primary\")+\n  scale_color_nfl(\"secondary\")+\n  labs(\n    title = \"Introducing the Mahomes Scale\",\n    subtitle = \"For players breaking records and charts (2018-2022 min. 100 dropbacks)\",\n    caption = \"Bruno Mioto @BrunoHMioto - data: nflfastR\",\n    x = \"EPA/Play on early downs (1st&2nd)\",\n    y = \"EPA/Play on late downs (3rd&4th)\"\n  )+\n  theme_classic()+\n  theme(\n    text = element_text(family = \"Open Sans\"),\n    axis.line = element_line(linewidth = 1),\n    axis.line.x = element_line_multicolour(c(\"black\", \"black\", \"black\",\"black\",\"black\",\"black\", \"#E31837\"),\n                                           size = 1),\n    axis.line.y = element_line_multicolour(c(\"black\", \"black\", \"#E31837\", \"#E31837\"),\n                                           size = 1),\n    axis.text = element_text(face = \"bold\", color = \"black\"),\n    axis.text.y = element_text(color = c(rep(\"black\",4),\"#d02138\",\"#e31d3b\",\"#E31837\")),\n    axis.ticks.y = element_line(color = c(rep(\"black\",4),\"#d02138\",\"#e31d3b\",\"#E31837\")),\n    axis.ticks.x = element_line(color = \"black\"),\n    axis.title = element_text(face = \"bold\"),\n    panel.grid.major.x = element_line(color = \"#dddddd\"),\n    panel.grid.major.y = element_line(color = c(\"#E3A3AD\",\"#E38A98\",\"#E36679\",\"#dddddd\",\"#dddddd\",\"#dddddd\", \"#dddddd\")),\n    plot.title = element_text(face = \"bold\", size = 18),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill = \"#f1f1f1\", color = NA),\n    panel.background = element_rect(fill = NA, color = NA),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(xlim = c(-0.02,NA),\n                  ylim = c(-0.2,NA))\n\n\nggsave(\"figures/mahomes_scale.png\", width = 8, height = 6.5)\n```\n:::\n\n\n\n\n\n\n### EPA&CPOE Scatterplot üí´\n\n![](figures/charts/EPA&CPOE_scatter.png){.lightbox group=\"my-gallery\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages ----------------------------------------------------------------\n\nlibrary(dplyr)\nlibrary(nflreadr)\nlibrary(nflplotR)\nlibrary(ggplot2)\nlibrary(ggdensity)\nlibrary(ggforce)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(ggthemes)\n\n# data --------------------------------------------------------------------\n\npbp_2006_2009 <- progressr::with_progress(load_pbp(seasons = 2006:2009))\n\npbp_2010_2022 <- progressr::with_progress(load_pbp(seasons = 2010:2022))\n\npbp_all <- pbp_2006_2009 %>% \n  bind_rows(pbp_2010_2022)\n\nplayers <- load_players()\n\npasserID <- \"00-0033873\" #P. Mahomes\n\nQB_CPOE <- pbp_all %>% \n  filter(!is.na(cpoe),\n         !is.na(passer_id),\n         down <= 4,\n         game_half != \"Overtime\") %>% \n  group_by(game_id, game_half, passer_id) %>% \n  mutate(rows = n()) %>% \n  filter(rows >= 5) %>% \n  ungroup() %>% \n  group_by(game_id, game_half, passer_id) %>% \n  summarize(cmp = mean(complete_pass),\n            mean_cpe = mean(cp, na.rm = TRUE),\n            mean_cpoe = mean(cpoe, na.rm = TRUE))\n\n\nQB_EPA <- pbp_all %>%\n  filter(!is.na(qb_epa),\n         !is.na(passer_id),\n         rush == 1 | pass == 1,\n         down <= 4,\n         game_half != \"Overtime\"\n  ) %>%\n  group_by(game_id,game_half, passer_id) %>% \n  mutate(rows = n()) %>% \n  filter(rows >= 5) %>% \n  ungroup() %>% \n  group_by(game_id, passer_id,game_half, posteam, defteam, season, week, game_date) %>% \n  summarize(tot_epa = sum(qb_epa),\n            mean_epa = mean(qb_epa)) \n\n\nlast_game <- QB_EPA %>% \n  filter(passer_id %in% passerID) %>% \n  tail(2)\n\n\n\nall_epa_cpoe <- QB_EPA %>% \n  left_join(QB_CPOE) %>% \n  filter(!is.na(cmp))\n\nggplot(all_epa_cpoe, aes(x=mean_cpoe, y=mean_epa))+\n  geom_hdr(method = \"mvnorm\")+\n  geom_vline(xintercept = 0, color = \"#F0F0F0\")+\n  geom_hline(yintercept = 0, color = \"#F0F0F0\")+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"#333333\")+\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"#333333\")+\n  #career\n  geom_point(data = all_epa_cpoe %>% \n               filter(passer_id %in% passerID),\n             fill = \"#F0F0F0\",\n             color = \"black\",\n             shape = 21,\n             size=4,\n             alpha = 0.8)+\n  #text\n  geom_text_repel(data = all_epa_cpoe %>% \n                    filter(passer_id %in% passerID),\n                  size = 5, \n                  box.padding = 1.2,\n                  min.segment.length = 0,\n                  segment.curvature = -0.1,\n                  segment.ncp = 3,\n                  #segment.angle = 20,\n                  segment.size = 0.8,\n                  force = 3,\n                  force_pull = 0.2,\n                  max.overlaps = Inf,\n                  #max.time = 5,max.iter = 1000000,\n                  lineheight = 0.8,\n                  bg.color = \"#fafafa\",\n                  aes(label = ifelse(game_id %in% last_game$game_id &\n                                       game_half == \"Half1\",\n                                     #glue::glue(\"1st Half\\nvs. {last_game$defteam}\"),\n                                     \"\",\n                                     ifelse(game_id %in% last_game$game_id &\n                                              game_half == \"Half2\",\n                                            glue::glue(\"2nd Half\\nSB LVII\"),\"\")))\n  )+\n  #text\n  geom_text_repel(data = all_epa_cpoe %>% \n                    filter(passer_id %in% passerID),\n                  #x = -7, y = 0.75,\n                  xlim = -13,\n                  ylim = 0.6,\n                  size = 5, \n                  box.padding = 1.2,\n                  min.segment.length = 0,\n                  segment.curvature = 0.1,\n                  segment.ncp = 2,\n                  segment.angle = 30,\n                  segment.size = 0.8,\n                  force = 3,\n                  force_pull = 0.2,\n                  max.overlaps = Inf,\n                  #max.time = 5,max.iter = 1000000,\n                  lineheight = 0.8,\n                  bg.color = \"#fafafa\",\n                  aes(label = ifelse(game_id %in% last_game$game_id &\n                                       game_half == \"Half1\",\n                                     glue::glue(\"1st Half\\nSB LVII\"),\n                                     \"\"))\n  )+\n  #this season\n  geom_point(data = all_epa_cpoe %>% \n               filter(passer_id %in% passerID &\n                        season == 2022),\n             aes(fill = posteam),\n             color = \"white\",\n             shape = 21,\n             size=4)+\n  #last game\n  geom_point(data = all_epa_cpoe %>% \n               filter(passer_id %in% passerID &\n                        game_id %in% last_game$game_id),\n             aes(fill = posteam),\n             color = \"black\",\n             show.legend = FALSE,\n             shape = 21,\n             size=4,\n             stroke = 1.2)+\n  #annotate 1.5-1.5 -35-35\n  annotate(geom = \"text\",\n         x = 21, y = -1.17,\n         label = \"Passing accuracy\")+\n  annotate(geom = \"segment\",\n           size = 1,\n           x = 13, y = -1.25, xend = 30, yend = -1.25,\n           arrow = arrow(length = unit(0.5, \"cm\")),\n           lineend = \"round\",\n           linejoin = \"round\")+\n  annotate(geom = \"text\",\n           angle = 90,\n           x = -32.5, y = 0.85,\n           label = \"Scoring efficiency\")+\n  annotate(geom = \"segment\",\n           size = 1,\n           x = -34, y = 0.55, xend = -34, yend = 1.3,\n           arrow = arrow(length = unit(0.5, \"cm\")),\n           lineend = \"round\",\n           linejoin = \"round\")+\n  scale_fill_nfl()+\n  #scale_color_identity()+\n  guides(alpha = guide_legend(reverse = TRUE))+\n  labs(#title = glue::glue(\"EPA/play and CPOE in half games of {last_game$full_name}<br> career and <span style='color:{last_game$team_color}'>2022 season</span>\"),\n      title = \"EPA/play and CPOE in half games of Patrick Mahomes<br>career and <span style='color:#E31837'>2022 season</span>\", \n      subtitle = \"NFL QB games from 2006 to 2022 season\",\n       y = \"Expected Points Added per play (EPA/Play)\",\n       x = \"Completion % over expected (CPOE)\",\n       alpha = \"NFL QB games density\",\n       caption = \"Bruno Mioto @BrunoHMioto - Data: nflfastR\")+\n  theme_classic()+\n  theme(\n    text = element_text(family = \"Open Sans\"),\n    strip.text = element_text(face = \"bold\"),\n    axis.text = element_text(face = \"bold\"),\n    axis.title = element_text(face = \"bold\"),\n    axis.ticks = element_blank(),\n    axis.line = element_blank(),\n    plot.title = element_markdown(size = 20, face = \"bold\", color = \"#3c3c3c\"),\n    plot.subtitle = element_text(size = 12),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15,15,15,15,\"pt\"),\n    legend.position = \"top\",\n    panel.grid.major = element_line(),\n    plot.background = element_rect(fill = \"#fafafa\"),\n    panel.background = element_rect(fill = \"#fafafa\"),\n    legend.background = element_rect(fill = \"#fafafa\"),\n  )+\n  coord_cartesian(ylim = c(-1.3, 1.3),\n                  xlim = c(-35, 35),\n                  clip = \"off\")\n\n\nggsave(filename = \"CPOE&EPA_P_Mahomes_SB_2022_2.png\",\n       #filename = glue::glue(\"CPOE&EPA_{last_game$full_name}_{last_game$game_id}_bengals_games.png\"),\n       width = 8,\n       height = 8)\n```\n:::\n",
    "supporting": [
      "scripts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}